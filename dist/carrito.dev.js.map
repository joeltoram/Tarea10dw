{"version":3,"sources":["carrito.js"],"names":["require","application","express","app","puerto","process","env","port","use","json","check","validationResult","carritos","id","marca","modelo","year","get","req","res","send","respuesta","find","params","maracbuscar","status","post","carroID","length","nuevoCarro","body","push","carroId","isLength","min","errors","isEmpty","array","put","car","parseInt","listen","console","log"],"mappings":"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","sourcesContent":["const { application } = require(\"express\");\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst puerto = process.env.port || 3000;\r\napp.use(express.json());\r\n\r\nconst { check, validationResult } = require(\"express-validator\");\r\n\r\nvar carritos = [\r\n  { id: 1, marca: \"BMW\", modelo: \"x3\", year: \"2020\" },\r\n  { id: 2, marca: \"AUDI\", modelo: \"A1\", year: \"2021\" },\r\n  { id: 3, marca: \"MERCEDES\", modelo: \"CLASE A\", year: \"2022\" },\r\n];\r\n\r\napp.get(\"/api/carritos/\", (req, res) => {\r\n    res.send(carritos);\r\n})\r\n\r\napp.get(\"/api/buscacarro/:maracbuscar\", (req, res) => {\r\n    const respuesta = carritos.find((respuesta) => respuesta.marca === req.params.maracbuscar);\r\n    if (!respuesta) {\r\n        res.status(404).send(\"Este carro no existe\");\r\n    } else {\r\n        res.send(respuesta);\r\n    }\r\n\r\n})\r\n\r\napp.get(\"/api/carros/id/:id\", (req, res) => {\r\n    //res.send(req.params.id);\r\n    var carritos = [\"ACURA\", \"TOYOTA\", \"FIAT\", \"MACERATI\"];\r\n    res.send(carritos[req.params.id]);\r\n  });\r\n  \r\n  \r\n  app.get(\"/api/carros/:empresa/:modelo\", (req, res) => {\r\n    // res.send(req.params.empresa + \" \" + req.params.modelo);\r\n    res.send(req.params);\r\n  });\r\n\r\n\r\n  app.post(\"/api/carros\", (req, res) => {\r\n    var carroID = carritos.length;\r\n    var nuevoCarro = {\r\n        id: req.body.id,\r\n        marca: req.body.marca,\r\n        modelo: req.body.modelo,\r\n        year: req.body.year,\r\n    };\r\n    carritos.push(nuevoCarro);\r\n    res.status(201).send(carritos);\r\n})\r\n\r\napp.post(\"/api/carros2\", (req, res) => {\r\n    if (!req.body.marca || req.body.marca.length < 3) {\r\n      res.status(400).send(\"la marca no es la que se espera\");\r\n      return;\r\n    }\r\n  \r\n    var carroId = carritos.length;\r\n    var nuevoCarro = {\r\n      id: carroId,\r\n      marca: req.body.marca,\r\n      modelo: req.body.modelo,\r\n      year: req.body.year,\r\n    };\r\n    carritos.push(nuevoCarro);\r\n    //poner el codigo 201 que es el correcto, de 200\r\n    res.status(201).send(carritos);\r\n    //res.send(nuevoCarro);\r\n  });\r\n\r\n\r\n  app.post(\r\n    \"/api/carros3\",\r\n    //[check(\"marca\").isEmail(), check(\"modelo\").isLength({ min: 3 })],\r\n    [check(\"marca\").isLength({ min: 3 }), check(\"modelo\").isLength({ min: 3 })],\r\n    (req, res) => {\r\n      const errors = validationResult(req);\r\n      if (!errors.isEmpty()) {\r\n        return res.status(422).json({ errors: errors.array() });\r\n      }\r\n  \r\n      var carroId = carritos.length;\r\n      var nuevoCarro = {\r\n        id: carroId,\r\n        marca: req.body.marca,\r\n        modelo: req.body.modelo,\r\n        year: req.body.year,\r\n      };\r\n      carritos.push(nuevoCarro);\r\n      //poner el codigo 201 que es el correcto, de 200\r\n      res.status(201).send(carritos);\r\n      //res.send(nuevoCarro);\r\n    }\r\n  );\r\n  //parte 3 PUT\r\n  app.put(\r\n    \"/api/carros3/:id\",\r\n  \r\n    //dejamos la validacion\r\n    [check(\"marca\").isLength({ min: 3 }), check(\"modelo\").isLength({ min: 3 })],\r\n    (req, res) => {\r\n      const errors = validationResult(req);\r\n      if (!errors.isEmpty()) {\r\n        return res.status(422).json({ errors: errors.array() });\r\n      }\r\n      //verificamos si existe el registro en el arreglo\r\n      const car = carritos.find((car) => car.id === parseInt(req.params.id));\r\n  \r\n      if (!car) {\r\n        res.status(404).send(\"no existe ese codigo de carro=\" + req.params.id);\r\n        return;\r\n      }\r\n      car.marca = req.body.marca;\r\n      car.modelo = req.body.modelo;\r\n      car.year = req.body.year;\r\n  \r\n      //poner el codigo 201 que es el correcto, de 200\r\n      res.status(200).send(car);\r\n      //res.send(nuevoCarro);\r\n    }\r\n  );\r\n\r\n\r\n\r\n\r\napp.listen(puerto, () => console.log(\"escuchando en puerto \" + puerto));"],"file":"carrito.dev.js"}